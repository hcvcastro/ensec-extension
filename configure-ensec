#! /bin/sh

# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

exec 6>&1

exec 5>>config-libreoffice.log
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

} >&5


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status


for ac_prog in gawk mawk nawk awk
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
    set dummy $ac_prog; ac_word=$2
    { 
	$as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
	$as_echo_n "checking for $ac_word... " >&6; 
    }
    if ${ac_cv_prog_AWK+:} false; then :
	$as_echo_n "(cached) " >&6
    else
	if test -n "$AWK"; then
	    ac_cv_prog_AWK="$AWK" # Let the user override the test.
	else
	    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
	    for as_dir in $PATH
	    do
		IFS=$as_save_IFS
		test -z "$as_dir" && as_dir=.
		for ac_exec_ext in '' $ac_executable_extensions; do
		    if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
			ac_cv_prog_AWK="$ac_prog"
			$as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
			break 2
		    fi
		done
	    done
	    IFS=$as_save_IFS
	fi
    fi

    AWK=$ac_cv_prog_AWK
    if test -n "$AWK"; then
	{ 
	    $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
	    $as_echo "$AWK" >&6; 
	}
    else
	{ 
	    $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
	    $as_echo "no" >&6; 
	}
    fi

    test -n "$AWK" && break
done

# Extract the first word of "$AWK", so it can be a program name with args.
set dummy $AWK; ac_word=$2
{ 
    $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
    $as_echo_n "checking for $ac_word... " >&6; 
}
if ${ac_cv_path_AWK+:} false; then :
  $as_echo_n "(cached) " >&6
else
  case $AWK in
      [\\/]* | ?:[\\/]*)
	  ac_cv_path_AWK="$AWK" # Let the user override the test with a path.
	  ;;
      *)
	  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
	  for as_dir in $PATH
	  do
	      IFS=$as_save_IFS
	      test -z "$as_dir" && as_dir=.
	      for ac_exec_ext in '' $ac_executable_extensions; do
		  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
		      ac_cv_path_AWK="$as_dir/$ac_word$ac_exec_ext"
		      $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
		      break 2
		  fi
	      done
	  done
	  IFS=$as_save_IFS
	  ;;
  esac
fi

AWK=$ac_cv_path_AWK
if test -n "$AWK"; then
  { 
      $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
      $as_echo "$AWK" >&6; 
  }
else
  { 
      $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
      $as_echo "no" >&6; 
  }
fi


if test -z "$AWK"; then
    as_fn_error $? "install awk to run this script" "$LINENO" 5
fi


# Extract the first word of "locate", so it can be a program name with args.
set dummy locate
ac_word=$2
{ 
    $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
    $as_echo_n "checking for $ac_word... " >&6; 
}

if ${ac_cv_path_LOCATE+:} false; then :
  $as_echo_n "(cached) " >&6
else
  case $LOCATE in
      [\\/]* | ?:[\\/]*)
	  ac_cv_path_LOCATE="$LOCATE" # Let the user override the test with a path.
	  ;;
      *)
	  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
	  for as_dir in $PATH
	  do
	      IFS=$as_save_IFS
	      test -z "$as_dir" && as_dir=.
	      for ac_exec_ext in '' $ac_executable_extensions; do
		  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
		      ac_cv_path_LOCATE="$as_dir/$ac_word$ac_exec_ext"
		      $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
		      break 2
		  fi
	      done
	  done
	  IFS=$as_save_IFS
	  ;;
  esac
fi

LOCATE=$ac_cv_path_LOCATE
if test -n "$LOCATE"; then
{ 
$as_echo "$as_me:${as_lineno-$LINENO}: result: $LOCATE" >&5
$as_echo "$LOCATE" >&6; 
}
else
{ 
$as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6
}
fi

if test -z "$LOCATE"; then
    as_fn_error $? "locate not found in \$PATH" "$LINENO" $5
fi


{ 
    $as_echo "$as_me:${as_lineno-$LINENO}: checking LibreOffice SDK instalation... " >&5
    $as_echo_n "checking LibreOffice SDK instalation... " >&6; 
}

LOCATE_LIST=$( $LOCATE --regex '.sdk/bin/cppumaker$' )

if test -z "$LOCATE_LIST"; then
    { 
	$as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
	$as_echo "no" >&6
    }
    as_fn_error $? "you do not have LibreOffice SDK installed!" "$LINENO" 5
else
    { 
	$as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
	$as_echo "yes" >&6
    }
    LOCATE_INDEX=0
    for LOCATE_ITERATOR in $LOCATE_LIST
    do
        LOCATE_INDEX=$((LOCATE_INDEX + 1))
        LOCATE_DIR=${LOCATE_ITERATOR%/*/*}
	$as_echo "$LOCATE_INDEX : $LOCATE_DIR" >&6
    done

    $as_echo "choose number LibreOffice SDK installation? default[0]" >&6

    #lsof +f g -ap $BASHPID -d 0,1,2

    SAVE_IFS="$IFS"
    IFS=' '
    IFS="$SAVE_IFS"
    read -r -p "Intro Number:" LOCATE_NUMBER

    LOCATE_PATH=

    if [ "$(( $LOCATE_NUMBER >= 1 && $LOCATE_NUMBER <= $LOCATE_INDEX ))" = "1" ]
    then
	LOCATE_PATH=$( echo $LOCATE_LIST | $AWK "{print \$$LOCATE_NUMBER}" )
    else
	LOCATE_NUMBER=1
	LOCATE_PATH=$(echo $LOCATE_LIST | $AWK '{print \$$LOCATE_NUMBER}')
    fi

    LOCATE_PATH=${LOCATE_PATH%/*/*}
    $as_echo "setting LibreOffice SDK installation to:" >&6
    $as_echo "$LOCATE_NUMBER : $LOCATE_PATH" >&6

    OO_SDK_HOME=$LOCATE_PATH
fi

exec 6>&-
exec 5<&-

export OO_SDK_HOME
$as_echo "OO_SDK_HOME=$OO_SDK_HOME"